services:
  tool:
    container_name: ${GROUP_NAME}-tool-${ENV}
    restart: always
    image: sangnv/bizgroup-thunder:latest
    volumes:
      - .:/tool
    working_dir: /tool
    ports:
      - "3000-3005:3000-3005"

  postgres:
    container_name: ${GROUP_NAME}-postgres-${ENV}
    image: postgres:latest
    environment:
      - POSTGRES_USER=lit
      - POSTGRES_PASSWORD=lit
      - POSTGRES_DB=master
    ports:
      - 54321:5432

  redis:
    container_name: ${GROUP_NAME}-redis-${ENV}
    image: redis:latest
    ports:
      - 63791:6379

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: ${GROUP_NAME}-kafka-${ENV}
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_KRAFT_MODE: "true"
      KAFKA_PROCESS_ROLES: controller,broker
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_LOG_RETENTION_HOURS: 168  # Keep logs for 7 days.
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CLUSTER_ID: "Mk3OEYBSD34fcwNTJENDM2Qk"

  collector:
    container_name: ${GROUP_NAME}-collector-${ENV}
    image: otel/opentelemetry-collector-contrib:0.120.0
    ports:
      - 1888:1888 # pprof extension
      - 8888:8888 # Prometheus metrics exposed by the Collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages extension

  kafka-topics:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
    environment:
      TOPIC_NAME_1: TOPIC_TEST_1
      TOPIC_NAME_2: TOPIC_TEST_2

volumes:
  kafka_data:
