name: Lightning CI

on:
  push:
    branches-ignore:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'PROD' || 'DEV' }}
    permissions:
      contents: write
      actions: write
      checks: write
      pull-requests: write

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.PG_USER }}
          POSTGRES_PASSWORD: ${{ secrets.PG_PASS }}
          POSTGRES_DB: ${{ secrets.PG_DB }}_${{ github.run_number }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

      kafka:
        image: confluentinc/cp-kafka:latest
        ports:
          - "9092:9092"
          - "9093:9093"
        env:
          KAFKA_NODE_ID: 1
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_KRAFT_MODE: "true"
          KAFKA_PROCESS_ROLES: controller,broker
          KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
          KAFKA_LISTENERS: PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
          KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
          KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
          KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
          KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
          CLUSTER_ID: "Mk3OEYBSD34fcwNTJENDM2Qk"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Unit Tests
        env:
          DATABASE_URL: postgres://${{ secrets.PG_USER }}:${{ secrets.PG_PASS }}@postgres:5432/${{ secrets.PG_DB }}_${{ github.run_number }}?sslmode=disable
          REDIS_URL: ${{ secrets.REDIS_URL }}
          KAFKA_URL: ${{ secrets.KAFKA_URL }}
          KAFKA_TOPIC_NAME_1: ${{ secrets.KAFKA_TOPIC_NAME_1 }}
          KAFKA_TOPIC_NAME_2: ${{ secrets.KAFKA_TOPIC_NAME_2 }}
        run: make test
