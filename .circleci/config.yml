version: 2.1

executors:
  bizgroup-executor:
    docker:
      - image: sangnv/bizgroup-thunder:x86
        environment:
          CODACY_PROJECT_TOKEN: $CODACY_PROJECT_TOKEN
          CODECOV_TOKEN: $CODECOV_TOKEN
          GITHUB_AUTH_TOKEN: $GITHUB_AUTH_TOKEN

jobs:

  # Stag Task
  stag-task:
    executor: bizgroup-executor
    steps:
      - checkout
      - run:
          name: Run Go Tests
          command: go test -mod=vendor -coverprofile=coverage.out -failfast -timeout 5m ./...

  # Prod Task
  prod-task:
    executor: bizgroup-executor
    steps:
      - checkout
      - run:
          name: Run Go Tests
          command: go test -mod=vendor -coverprofile=full_coverage.out -failfast -timeout 5m ./...
      - persist_to_workspace:
          root: .
          paths:
            - full_coverage.out

  # Code Report & Coverage
  coverage:
    executor: bizgroup-executor
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Filter Coverage
          command: grep -v "mock_.*.go" full_coverage.out > coverage.out
      - run:
          name: Cover Coverage
          command: go tool cover -func=coverage.out
      - run:
          name: Send Coverall
          command: goveralls -coverprofile=coverage.out -service=circle-ci -repotoken=$COVERALLS_TOKEN
      - run:
          name: Send Codacy
          command: bash <(curl -Ls https://coverage.codacy.com/get.sh) report --force-coverage-parser go -r coverage.out
      - run:
          name: Send Codecov
          command: codecov -f coverage.out
      - run:
          name: Send Open SSF
          command: scorecard --repo=github.com/viebiz/lit


workflows:
  version: 2
  dev-workflow:
    jobs:
      - stag-task:
          filters:
            branches:
              only:
                - stag
      - prod-task:
          filters:
            branches:
              only:
                - main
      - coverage:
          requires:
            - prod-task
          filters:
            branches:
              only:
                - main
